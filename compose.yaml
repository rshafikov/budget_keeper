services:
  db:
    container_name: "bot-db"
    image: postgres:16.2
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: "$DB_PASS"
      POSTGRES_USER: "$DB_USER"
      POSTGRES_DB: "$DB_NAME"
      POSTGRES_PORT: "$DB_PORT"
#   dev-mode-only
#    ports:
#      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    container_name: "bot-redis"
    depends_on:
      - api
    image: redis:7.2.5
#   dev-mode only
#    ports:
#      - "127.0.0.1:6379:6379"

  migrate_and_tests:
    container_name: "bot-setup"
    depends_on:
      - db
    image: rshafikov/budget_bot_infra:latest
#   dev-mode-only
#    volumes:
#       - "./:/app"
    env_file:
      - .env
    command: ["make", "test", "db_setup"]

  api:
    container_name: "bot-api"
    depends_on:
      - migrate_and_tests
    image: rshafikov/budget_bot:latest
#    build:
#      context: .
#      target: dev
#      dockerfile: Dockerfile
#   dev-mode-only
#    volumes:
#       - "./:/app"
#    ports:
#       - "127.0.0.1:8000:8000"
    env_file:
      - .env
    command: ["fastapi", "run", "api/main.py", "--port", "8000", "--host", "0.0.0.0"]

  bot:
    container_name: "bot"
    depends_on:
      - redis
      - api
#    image: rshafikov/budget_bot:latest
    build:
      context: .
      target: prod
      dockerfile: Dockerfile
#   dev-mode-only
#    volumes:
#       - "./:/app"
    env_file:
      - .env
    command: ["python3", "run_bot.py"]

volumes:
  postgres_data:
